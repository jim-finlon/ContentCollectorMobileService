!function(){"use strict";function n(n,e,t,a,o,i){function s(){r().then(p).then(c)}function r(){var e=n.defer();return o.then(function(n){"undefined"==typeof _.contains&&(_.contains=_.includes),"undefined"==typeof _.object&&(_.object=_.zipObject),n.visualRefresh=!0,m.maps=n,m.map={center:{latitude:0,longitude:0},zoom:17,pan:!0,options:{disableDefaultUI:!1,mapTypeId:n.MapTypeId.ROADMAP},bounds:new m.maps.LatLngBounds(new m.maps.LatLng(1,(-1)),new m.maps.LatLng(.1,(-.1)))},i.promise().then(function(n){m.mapInstance=n[0].map}),m.mapOptions={mapTypeId:m.maps.MapTypeId.ROADMAP,zoom:12},e.resolve()}),e.promise}function p(){var e=n.defer();return a.getLocations().then(function(n){m.locations=n.data,e.resolve(n)}),e.promise}function c(){t(l,2e3)}function l(){if(m.mapInstance){u(m.mapMarkers),m.mapMarkers=[];var n=[],a=[];angular.forEach(m.locations,function(e,t){function o(n){m.maps.event.addListener(n,"click",function(){m.currentInfoWindow&&m.currentInfoWindow.close(),m.currentInfoWindow=s,s.open(m.mapInstance,n)})}var i=new m.maps.Marker({id:t,map:m.mapInstance,position:new m.maps.LatLng(e.latitude,e.longitude),title:e.name,zIndex:1}),s=new m.maps.InfoWindow({content:d(e)});n[t]=i,a[t]=s,o(i)});var o=new m.maps.LatLngBounds;angular.forEach(n,function(n){o.extend(n.getPosition())}),m.mapInstance.setCenter(o.getCenter()),m.mapInstance.fitBounds(o),e.safeApply(function(){m.mapMarkers=n,m.toolTips=a}),t(function(){m.maps.event.trigger(m.mapInstance,"resize")},100)}else console.log("async map load did not complete in time")}function u(n){angular.forEach(n,function(n){n.setMap(null)})}function d(n){var e="";return e+='<div style="min-height: 65px"><table style="width: 200px; padding: 2px; border-spacing: 2px"><tr>',e+='<td style="width: 200px; padding-left: 5px">',e+="<strong>"+n.name+"</strong><br />",e+=n.geolocation+"<br />",e+="Lat: "+n.latitude+"<br /> Lon: "+n.longitude+"<br /> Alt: "+n.altitude+"<br />",e+="</td></tr></table></div>"}var m=this;m.locations=[],m.map={},m.maps=null,m.mapInstance=null,m.bounds={},m.mapMarker={},m.mapMarkers=[],m.toolTips=[],s(),e.safeApply=function(n){var e=this.$root.$$phase;"$apply"==e||"$digest"==e?n&&"function"==typeof n&&n():this.$apply(n)}}angular.module("app",["locationModule","uiGmapgoogle-maps"]),angular.module("app").config(function(n){n.configure({key:"get a key at https://console.developers.google.com"})});var e="home";angular.module("app").controller(e,n),n.$inject=["$q","$scope","$timeout","locationRepository","uiGmapGoogleMapApi","uiGmapIsReady"]}(),$(function(){$("#side-menu").metisMenu()}),$(function(){$(window).bind("load resize",function(){var n=50,e=this.window.innerWidth>0?this.window.innerWidth:this.screen.width;e<768?($("div.navbar-collapse").addClass("collapse"),n=100):$("div.navbar-collapse").removeClass("collapse");var t=(this.window.innerHeight>0?this.window.innerHeight:this.screen.height)-1;t-=n,t<1&&(t=1),t>n&&$("#page-wrapper").css("min-height",t+"px")});for(var n=window.location,e=$("ul.nav a").filter(function(){return this.href==n}).addClass("active").parent();;){if(!e.is("li"))break;e=e.parent().addClass("in").parent()}}),function(){"use strict";var n=angular.module("locationModule",[]);n.factory("locationRepository",function(n){function e(){return n.get("http://contentcollector.azurewebsites.net/tables/location",{headers:{"ZUMO-API-VERSION":"2.0.0"}})}return{getLocations:e}})}();